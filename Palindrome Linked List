/*Palindrome Linked List/*


 /**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) 
    {
        ListNode *fast = head, *slow = head, *mid = NULL;
        
        while(fast!=NULL && fast->next!=NULL)
        {
            slow = slow->next;
            fast = fast->next->next;
        }
        
        if(fast != NULL) //odd
        {
            mid = slow->next;
        }
        
        else
        {
            mid = slow;
        }
        
        ListNode *prev = NULL, *nxt = NULL;
       
        while(mid != NULL)
        {
            nxt = mid->next;
            mid->next = prev;
            
            prev = mid;
            mid = nxt;
        }
        
        while(prev != NULL)
        {
            if(prev->val != head->val)
                return false;
            
            head = head->next, prev = prev->next;
        }
        
        return true;
    }
        
    
};