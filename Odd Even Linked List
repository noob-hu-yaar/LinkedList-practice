/* Odd Even Linked List */

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) 
    {
        if(head == NULL)
        {
            return NULL;
        }
        
        ListNode *odd = head, *even = head->next;
        ListNode *even_first = even;
        
        while(true)
        {
            if(!odd || !even)
            {
                odd->next = even_first;
                break;
            }
            
            if(even->next == NULL)
            {
                odd->next = even_first;
                break;
            }
            
            odd->next =  even->next;
            odd = even->next;
            
            if(odd->next == NULL)
            {
                even->next = NULL;
                odd->next = even_first;
                break;
            }
            
            even->next = odd->next;
            even = odd->next;
        }
        
        return head;
        
    }
};